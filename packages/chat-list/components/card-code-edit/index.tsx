import React, { useEffect, useState } from 'react';
import {
  Card,
  CardContent,
  CardTitle,
  CardActions,
  // RadioGroup,
} from "chat-list/components/ui/card";
import Button from '../button';
import sheetApi from '@api/sheet';
import { setCodeEditValue } from 'chat-list/local/session';
import useChatState from 'chat-list/hook/useChatState';
import Markdown from 'chat-list/components/markdown';
// import Markdown from '../markdown';
export interface ICardCodeEditProps {
  code: string;
  data: string[][];
  onUpdate: () => void;
  onError: (error: Error) => void;
  onCancel: () => void;
}

export function CardCodeEdit(props: ICardCodeEditProps) {
  const { code, data, onUpdate, onError, onCancel } = props;
  const chatState = useChatState();
  const [jsCode, setJsCode] = useState(code);
  const [result, setResult] = useState<string[][]>([]);
  const [isError, setIsError] = useState(false);
  const onOk = async () => {
    await sheetApi.setValues(result);
    onUpdate();
  };
  const initFunc = (code: string) => {
    const fun = eval(`(function() {${code}; \n return handleSheetData;})`);
    return fun();
  };
  // const onCodeChange = (val: string) => {
  //   setJsCode(val);
  // };
  const onExcute = () => {
    try {
      const fun = initFunc(jsCode);
      const copy = JSON.parse(JSON.stringify(data));
      const result = fun(copy);
      setResult(result);
    } catch (err) {
      setIsError(true);
      onError && onError(err);
    }
  };
  const onOpenInWindow = async () => {
    setCodeEditValue({ data, code: jsCode });
    if (chatState.platform === 'google') {
      await sheetApi.showModalDialog(
        'html/code-edit',
        'Edit Function'
      );
    } else {
      await sheetApi.showModalDialog(
        'html/code-edit',
        'Edit Function',
        700,
        600,
        async (event: { type: string; data: any }) => {
          if (event.type === 'save') {
            await sheetApi.setValues(event.data);
          }
        }
      );
    }

  };
  const handleCancel = () => {
    onCancel?.();
  };
  useEffect(() => {
    onExcute();
  }, []);
  return (
    <Card className="w-card">
      <CardTitle>Confirm and update to Sheet</CardTitle>
      <CardContent className="markdown flex flex-col justify-center overflow-hidden">
        {
          isError && (
            <>
              <label className="input-label">Function:</label>
              <Markdown >
                {'```\n' + jsCode + '\n```'}
              </Markdown>
              <p>
                Sorry, something went wrong, this is the <code>function</code> generated by GPT, you can refer to it and adjust your needs{' '}
              </p>
            </>
          )
        }

        {/* <div className="flex flex-row justify-end py-2">
          <Button
            action="edit-function"
            color="primary"
            onClick={onOpenInWindow}
            title="Click to open new window to edit function."
          >
            Edit In Window
          </Button>
        </div> */}
        {
          !isError && (
            <>
              <label className="input-label">Preview:</label>
              <div className=" overflow-auto max-h-52">
                <table>
                  {result.map((row, index) => {
                    return (
                      <tr key={index} className="border-b border-gray-200">
                        {row.map((cell, cellIndex) => {
                          return (
                            <td
                              key={cellIndex}
                              className="px-2 py-1 border-b border-gray-200"
                            >
                              {cell}
                            </td>
                          );
                        })}
                      </tr>
                    );
                  })}
                </table>
              </div>
              <p>
                This is the result of the editing, if you confirm that there are no
                problems, click Ok to update to the Sheet{' '}
              </p>
            </>
          )
        }

      </CardContent>
      <CardActions>
        <Button
          className='mx-1'
          action="edit-ok"
          color="primary"
          title="Insert table to Sheet."
          onClick={onOk}
        >
          Ok
        </Button>
        <Button
          className='mx-1'
          action="edit-function"
          color="primary"
          onClick={onOpenInWindow}
          title="Click to open new window to edit function."
        >
          Edit
        </Button>
        <Button
          className='mx-1'
          action="edit-cancel"
          title="Reslect range"
          onClick={handleCancel}
        >
          Cancel
        </Button>
      </CardActions>
    </Card>
  );
}

export default React.memo(CardCodeEdit);
